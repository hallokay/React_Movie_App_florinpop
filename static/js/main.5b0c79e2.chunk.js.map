{"version":3,"sources":["conponents/Movie.js","App.js","index.js"],"names":["Movie","vote","title","poster_path","overview","vote_average","className","src","alt","App","useState","movies","setMovies","searchTerm","setSearchTerm","useEffect","getMovies","API","fetch","then","res","json","data","console","log","results","onSubmit","e","preventDefault","type","value","placeholder","onChange","target","map","movie","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAsCeA,EAtBD,SAAC,GAAD,IAZYC,EAYTC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,SAAUC,EAAjC,EAAiCA,aAAjC,OAEd,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAjBO,mCAiBQJ,EAAaK,IAAKN,IAEtC,sBAAKI,UAAU,aAAf,UACI,6BAAKJ,IACL,sBAAMI,UAAS,eAnBGL,EAmBmBI,EAlBlCJ,GAAQ,EACA,QACAA,GAAQ,EACR,SAEA,QAaX,SAAuDI,OAG3D,sBAAKC,UAAU,aAAf,UACI,4CACA,4BAAIF,WC4CGK,MAjEf,WAEA,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACRC,EAVmB,yHAYlB,IAEH,IAAMA,EAAY,SAACC,GACjBC,MAAMD,GACHE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZV,EAAUU,EAAKG,aAqBnB,OACE,qCACA,iCACE,sBAAMC,SAnBW,SAACC,GACtBA,EAAEC,iBAECf,IACDG,EA3Be,6FA2BQH,GACvBC,EAAc,MAcZ,SAEE,uBAAOe,KAAK,OACJC,MAAOjB,EACPP,UAAU,SACVyB,YAAY,YACZC,SAdO,SAACL,GACtBb,EAAca,EAAEM,OAAOH,cAkBrB,sBAAKxB,UAAU,kBAAf,UAECK,EAAOuB,KAAI,SAACC,GAAD,OAEX,cAAC,EAAD,eAA0BA,GAAdA,EAAMC,OAJnB,WClDJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5b0c79e2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\n    const setVoteClass = (vote) => {\r\n        if(vote >= 8) {\r\n            return \"green\";\r\n        } else if (vote >= 6) {\r\n            return \"orange\";\r\n        } else {\r\n            return \"red\";\r\n        }\r\n    }\r\n\r\n\r\n\r\nconst Movie = ({ title, poster_path, overview, vote_average}) => (\r\n\r\n<div className=\"movie\">\r\n    <img src={IMG_API + poster_path} alt={title} /> \r\n\r\n    <div className=\"movie_info\">\r\n        <h3>{title}</h3>\r\n        <span className={`tag ${setVoteClass(vote_average)}`}>{vote_average}</span>\r\n    </div>\r\n\r\n    <div className=\"movie_over\">\r\n        <h2>Overview :</h2>\r\n        <p>{overview}</p>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n);\r\n  \r\n\r\n\r\nexport default Movie\r\n","import React, { useEffect, useState } from 'react';\nimport Movie from './conponents/Movie';\n\nconst FEATURED_API = \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=04c35731a5ee918f014970082a0088b1&page=1\";\nconst SEARCH_API = \"https://api.themoviedb.org/3/search/movie?&api_key=04c35731a5ee918f014970082a0088b1&query=\";\n\n\nfunction App() {\n\nconst [movies, setMovies] = useState([]);\nconst [searchTerm, setSearchTerm] = useState('');\n\nuseEffect(() => {\n  getMovies(FEATURED_API);\n\n}, []);\n\nconst getMovies = (API) =>  {\n  fetch(API)\n    .then((res) => res.json())\n    .then((data) => {\n      console.log(data);\n      setMovies(data.results);\n    })\n};\n\n\nconst handleOnSubmit = (e) => {\n  e.preventDefault();\n\n  if(searchTerm) {\n    getMovies(SEARCH_API + searchTerm);\n    setSearchTerm('');\n  };\n \n\n  };\n\nconst handleOnChange = (e) => {\n  setSearchTerm(e.target.value);\n\n};\n\n  return (\n    <>\n    <header>\n      <form onSubmit={handleOnSubmit} >\n\n        <input type=\"text\" \n                value={searchTerm}\n                className=\"search\" \n                placeholder=\"Search...\"\n                onChange={handleOnChange}/>\n      </form>\n  </header>\n\n    \n    <div className=\"movie_container\">\n  \n   { movies.map((movie) => (\n\n     <Movie key={movie.id} {...movie}/>\n    //  키를 꼭 줘야함 \n    // {...date} 쓰면 데이터의 각각\n   )) };\n   </div>\n \n   </>\n  );\n\n   }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}